"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PATTERN = void 0;
exports.PATTERN = JSON.parse("<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>API Documentation</title>\n    <style>\n      body {\n        margin: 0;\n        padding: 30px;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu',\n          'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        background: #333333;\n      }\n\n      code {\n        font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n      }\n\n      .api-call {\n        display: flex;\n        align-items: center;\n        font-size: 14px;\n        margin-bottom: 15px;\n      }\n\n      .description {\n        line-height: 24px;\n        font-size: 16px;\n        background: #252525;\n        padding: 15px;\n        border-radius: 6px;\n        color: #b9b9b9;\n        margin-bottom: 15px;\n      }\n\n      .method {\n        background: #c57b1f;\n        padding: 5px 10px;\n        border-radius: 5px 0px 0px 5px;\n        color: #fefefe;\n        font-weight: bold;\n      }\n\n      .method.GET {\n        background: #1f79c5;\n      }\n\n      .method.DELETE {\n        background: #af0f2d;\n      }\n\n      .auth {\n        background: #5c8609;\n        padding: 5px 10px;\n        border-radius: 5px;\n        font-weight: bold;\n        margin-left: 20px;\n        color: #c7eab9;\n      }\n\n      .path {\n        background: #232323;\n        font-weight: bold;\n        padding: 5px 10px;\n        border-radius: 0px 5px 5px 0px;\n        color: #eabc55;\n      }\n\n      .example {\n        background: #252525;\n        padding: 15px;\n        margin: 0;\n        color: #b9b9b9;\n        border-radius: 5px;\n        margin-bottom: 15px;\n      }\n\n      .struct {\n        background: #151515;\n        padding: 15px;\n        border-radius: 7px;\n        color: #989898;\n        white-space: pre-wrap;\n        margin-bottom: 15px;\n      }\n\n      .struct .json-key,\n      .request .json-key {\n        color: #ffb060;\n      }\n\n      .response .json-key {\n        color: #e2801b;\n      }\n\n      .request {\n        background: #151515;\n        padding: 15px;\n        border-radius: 7px;\n        color: #989898;\n        white-space: pre-wrap;\n        margin-bottom: 15px;\n      }\n\n      .response {\n        background: #151515;\n        padding: 15px;\n        border-radius: 7px;\n        color: #989898;\n        white-space: pre-wrap;\n      }\n      h3 {\n        margin: 0;\n        margin-bottom: 10px;\n      }\n      h4 {\n        margin: 0;\n        margin-bottom: 5px;\n      }\n\n      .goto {\n        font-weight: bold;\n        font-size: 22px;\n        width: 25px;\n        text-align: center;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      .json-value.string {\n        color: #26b133;\n      }\n      .json-value.boolean {\n        color: #77a0e0;\n      }\n      .json-value.number {\n        color: #feb400;\n      }\n      .json-value.null {\n        color: #ea640f;\n        font-weight: bold;\n      }\n\n      pre {\n        margin: 0;\n      }\n\n      input {\n        outline: none;\n        border: 0;\n        background: #151515;\n        padding: 10px;\n        color: #9c9c9c;\n        margin-right: 5px;\n        margin-bottom: 5px;\n      }\n\n      hr {\n        margin-bottom: 50px;\n        margin-top: 50px;\n        border: 1px solid #5d5d5d;\n      }\n\n      .description hr {\n        margin-bottom: 25px;\n        margin-top: 25px;\n      }\n\n      ::-webkit-calendar-picker-indicator {\n        filter: invert(1);\n        opacity: 0.5;\n      }\n    </style>\n  </head>\n  <body>\n    <div class=\"description\" style=\"margin-bottom: 50px\"><%- description %></div>\n\n    <%- out %> <%- buildJson %>\n    <script>\n      async function makeQuery(path, method, data, id, isReturnAccessToken) {\n        const hasBody = method.toUpperCase() === 'POST' || method.toUpperCase() === 'PUT';\n        const queryString = hasBody\n          ? ''\n          : Object.keys(data)\n              .map((key) => key + '=' + data[key])\n              .join('&');\n        let bodyData = undefined;\n        if (method.toUpperCase() === 'POST') bodyData = JSON.stringify(data);\n        if (method.toUpperCase() === 'PUT') bodyData = data;\n\n        const headers = {\n          Authorization: localStorage.getItem('testApi_accessToken'),\n          'Content-Type': 'application/json',\n        };\n\n        if (method.toUpperCase() === 'PUT') delete headers['Content-Type'];\n\n        const response = await fetch(window.location.origin + path + '?' + queryString, {\n          method,\n          headers,\n          body: bodyData,\n        });\n        const json = await response.json();\n        if (isReturnAccessToken) {\n          if (typeof json === 'string') {\n            localStorage.setItem('testApi_accessToken', json);\n          } else {\n            if (typeof json.response === 'string') {\n              localStorage.setItem('testApi_accessToken', json.response);\n            } else {\n              localStorage.setItem('testApi_accessToken', json.response.accessToken);\n            }\n          }\n        }\n        document.querySelector('#result-' + id).innerHTML = buildJson(\n          JSON.stringify(json, null, 4),\n        );\n      }\n\n      document.querySelectorAll('.run-query').forEach((x) => {\n        const id = x.getAttribute('data-id');\n        const path = x.getAttribute('data-path');\n        const method = x.getAttribute('data-method');\n        const isReturnAccessToken = x.getAttribute('data-is-return-access-token') === 'true';\n\n        x.addEventListener('click', (e) => {\n          const input = document.querySelectorAll('#form-' + id + ' > input');\n          const formData = {};\n          const formData_real = new FormData();\n          input.forEach((y) => {\n            const type = y.getAttribute('type');\n            formData[y.getAttribute('name')] = y.value;\n\n            if (type === 'file') {\n              for (let i = 0; i < y.files.length; i++) {\n                formData_real.append(y.getAttribute('name') + '_' + i, y.files[i]);\n              }\n            } else {\n              formData_real.append(y.getAttribute('name'), y.value);\n            }\n          });\n\n          makeQuery(\n            path,\n            method,\n            method.toUpperCase() === 'PUT' ? formData_real : formData,\n            id,\n            isReturnAccessToken,\n          );\n        });\n      });\n\n      document.querySelectorAll('.window-location-origin').forEach((x) => {\n        x.innerHTML = window.location.origin;\n      });\n    </script>\n  </body>\n</html>\n");
