"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PATTERN = void 0;
exports.PATTERN = Buffer.from("", "base64").toString('utf-8');
